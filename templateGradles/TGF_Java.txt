//Uncomment the buildscript below to include Kotlin and JavaFX in your project
/*
buildscript {
    ext.kotlin_version = '1.0.0'
    dependencies {
        classpath group: 'de.dynamicfiles.projects.gradle.plugins', name: 'javafx-gradle-plugin', version: '8.8.2'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
    repositories {
        mavenLocal()
        mavenCentral()
    }
}
*/

// Apply the java plugin to add support for Java
apply plugin: 'java'
apply plugin: 'application'
// apply plugin: 'kotlin'
// apply plugin: 'javafx-gradle-plugin'

mainClassName = 'mainPackage.Main'

// In this section you declare where to find the dependencies of your project
repositories {
    mavenCentral()
}


// In this section you declare the dependencies for your production and test code
dependencies {
	// Uncomment the line below for a project that uses MongoDB
    // compile 'org.mongodb:mongodb-driver:3.4.2'

	// Uncoment the line below for a project that uses the Kotlin programming language
    // compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    
	// Uncomment the line below to include any external jars that you have
	// compile files('path/to/external jar')
}


jar {
    from('src') {
        include '/resources/*.png'
		
		// Below, you can include any files that you need to.
		/*
			include '/resources/maps/*.txt'
			include '/resources/styles/*.css'
		*/
    }
    into 'resources', {
        from 'resources'

		// Below, you can place resources into specific folders
		/*
			from 'resources/maps'
			from 'resources/styles'
		*/
    }
}

// Uncomment the lines below for a javafx project
/*
jfx {
    // minimal requirement for jfxJar-task
    mainClass = 'mainPackage.Main'
    
    // minimal requirement for jfxNative-task
    vendor = 'YourName'
}
*/